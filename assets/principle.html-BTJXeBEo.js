import{_ as e,c as i,o as n,e as t}from"./app-0TPXc-ei.js";const l={},r=t('<h1 id="设计原则" tabindex="-1"><a class="header-anchor" href="#设计原则"><span>设计原则</span></a></h1><p>设计模式包含六大设计原则，主要是指：</p><ul><li>单一职责原则（Single Responsibility Principle）</li><li>开闭原则（Open Closed Principle）</li><li>里氏替换原则（Liskov Substitution Principle）</li><li>迪米特法则（Law of Demeter），又叫“最少知道法则”</li><li>接口隔离原则（Interface Segregation Principle）</li><li>依赖倒置原则（Dependence Inversion Principle）</li></ul><p>把这 6 个原则的首字母（里氏替换原则和迪米特法则的首字母重复，只取一个）联合起来就是：SOLID（稳定的），其代表的含义也就是把这 6 个原则结合使用的好处：建立稳定、灵活、健壮的设计。</p>',4),a=[r];function c(p,s){return n(),i("div",null,a)}const d=e(l,[["render",c],["__file","principle.html.vue"]]),_=JSON.parse('{"path":"/design-pattern/principle.html","title":"设计原则","lang":"zh-CN","frontmatter":{},"headers":[],"git":{},"filePathRelative":"design-pattern/principle.md"}');export{d as comp,_ as data};

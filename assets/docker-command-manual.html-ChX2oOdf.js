import{_ as a,c as s,o as e,e as n}from"./app-0TPXc-ei.js";const l={},i=n(`<h2 id="安装-运行" tabindex="-1"><a class="header-anchor" href="#安装-运行"><span>安装/运行</span></a></h2><h3 id="查找镜像" tabindex="-1"><a class="header-anchor" href="#查找镜像"><span>查找镜像</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">docker</span> search <span class="token operator">&lt;</span>image_name<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>image_name</code> 镜像名称</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment"># 查找helloword镜像</span></span>
<span class="line"><span class="token function">docker</span> search helloworld</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="拉取镜像到本地" tabindex="-1"><a class="header-anchor" href="#拉取镜像到本地"><span>拉取镜像到本地</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">docker</span> pull <span class="token operator">&lt;</span>image_name<span class="token operator">&gt;</span><span class="token operator">&lt;</span>:tag<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>image_name</code> 镜像名称。</li><li><code>:tag</code> 镜像标签，表示拉取指定tag的镜像，比如<code>image_name:1.0</code>，默认为<code>latest</code></li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment"># 拉取最新的helloworld镜像</span></span>
<span class="line"><span class="token function">docker</span> pull helloworld:latest</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="运行容器" tabindex="-1"><a class="header-anchor" href="#运行容器"><span>运行容器</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">docker</span> run <span class="token parameter variable">-itd</span> <span class="token parameter variable">-rm</span> <span class="token parameter variable">--name</span> <span class="token operator">&lt;</span>container_name<span class="token operator">&gt;</span> <span class="token parameter variable">-p</span> <span class="token number">80</span>:80 <span class="token operator">&lt;</span>image_name<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>--name container_name</code> 容器命名为<code>&lt;container_name&gt;</code></li><li><code>-rm</code> 容器在退出时自动删除</li><li><code>-d</code> 后台运行容器，并返回容器ID</li><li><code>_e</code> 设置容器参数（环境变量）</li><li><code>-p 80:80</code> 将本地计算机上的端口<code>80</code>映射到容器中的端口<code>80</code></li><li><code>-v xx:xxx</code> 将本地路径绑定到容器中的路径</li><li><code>image_name</code> 镜像名称</li></ul><h4 id="示例一" tabindex="-1"><a class="header-anchor" href="#示例一"><span>示例一</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment"># 运行helloworld镜像，这里没有指定--name，系统将随机命名容器</span></span>
<span class="line"><span class="token function">docker</span> run helloworld</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="示例二" tabindex="-1"><a class="header-anchor" href="#示例二"><span>示例二</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment"># --name alsync.web 容器命名为alsync.web</span></span>
<span class="line"><span class="token comment"># -rm 容器在退出时自动删除</span></span>
<span class="line"><span class="token comment"># -d 后台运行</span></span>
<span class="line"><span class="token comment"># -p 5000:80 将本地计算机上的端口 5000 映射到容器中的端口 80</span></span>
<span class="line"><span class="token function">docker</span> run <span class="token parameter variable">-it</span> <span class="token parameter variable">--rm</span> <span class="token parameter variable">-p</span> <span class="token number">5000</span>:80 <span class="token parameter variable">--name</span> alsync.web alsync.web</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="显示容器-镜像" tabindex="-1"><a class="header-anchor" href="#显示容器-镜像"><span>显示容器/镜像</span></a></h2><h3 id="显示容器" tabindex="-1"><a class="header-anchor" href="#显示容器"><span>显示容器</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">docker</span> <span class="token function">ps</span> <span class="token operator">&lt;</span>-a<span class="token operator">|</span>-q<span class="token operator">|</span>-aq<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>-a</code> 显示所有的容器，包括未运行的</li><li><code>-q</code> 静默模式，只显示容器编号</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment"># 显示所有的容器，默认为运行中的</span></span>
<span class="line"><span class="token function">docker</span> <span class="token function">ps</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment"># 显示所有的容器，包括未运行的</span></span>
<span class="line"><span class="token function">docker</span> <span class="token function">ps</span> <span class="token parameter variable">-a</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment"># 显示所有容器的编号</span></span>
<span class="line"><span class="token function">docker</span> <span class="token function">ps</span> <span class="token parameter variable">-aq</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="显示镜像" tabindex="-1"><a class="header-anchor" href="#显示镜像"><span>显示镜像</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">docker</span> images</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="启动-停止容器" tabindex="-1"><a class="header-anchor" href="#启动-停止容器"><span>启动/停止容器</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">docker</span> start/stop <span class="token operator">&lt;</span>container<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>container</code> 容器名称或者容器ID</li></ul><h3 id="批量启动所有容器" tabindex="-1"><a class="header-anchor" href="#批量启动所有容器"><span>批量启动所有容器</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">docker</span> start <span class="token variable"><span class="token variable">$(</span><span class="token function">docker</span> <span class="token function">ps</span> <span class="token parameter variable">-a</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{ print $1}&#39;</span> <span class="token operator">|</span> <span class="token function">tail</span> <span class="token parameter variable">-n</span> +2<span class="token variable">)</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="批量停止所有容器" tabindex="-1"><a class="header-anchor" href="#批量停止所有容器"><span>批量停止所有容器</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">docker</span> stop <span class="token variable"><span class="token variable">$(</span><span class="token function">docker</span> <span class="token function">ps</span> <span class="token parameter variable">-a</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{ print $1}&#39;</span> <span class="token operator">|</span> <span class="token function">tail</span> <span class="token parameter variable">-n</span> +2<span class="token variable">)</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="删除容器-镜像" tabindex="-1"><a class="header-anchor" href="#删除容器-镜像"><span>删除容器/镜像</span></a></h2><h3 id="删除容器" tabindex="-1"><a class="header-anchor" href="#删除容器"><span>删除容器</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">docker</span> <span class="token function">rm</span> <span class="token operator">&lt;</span>container<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>container</code> 容器名称或者容器ID</li></ul><h3 id="删除所有的容器" tabindex="-1"><a class="header-anchor" href="#删除所有的容器"><span>删除所有的容器</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">docker</span> <span class="token function">rm</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">docker</span> <span class="token function">ps</span> <span class="token parameter variable">-a</span> <span class="token parameter variable">-q</span><span class="token variable">)</span></span></span>
<span class="line"><span class="token comment"># 或者</span></span>
<span class="line"><span class="token function">docker</span> <span class="token function">rm</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">docker</span> <span class="token function">ps</span> <span class="token parameter variable">-aq</span><span class="token variable">)</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="删除镜像" tabindex="-1"><a class="header-anchor" href="#删除镜像"><span>删除镜像</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">docker</span> rmi <span class="token operator">&lt;</span>image<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>image</code> 镜像ID或者名称</li></ul><h3 id="删除所有untagged镜像" tabindex="-1"><a class="header-anchor" href="#删除所有untagged镜像"><span>删除所有untagged镜像</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">docker</span> rmi <span class="token variable"><span class="token variable">$(</span><span class="token function">docker</span> images <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">&quot;^&lt;none&gt;&quot;</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&quot;{print <span class="token variable">$3</span>}&quot;</span><span class="token variable">)</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="删除所有镜像" tabindex="-1"><a class="header-anchor" href="#删除所有镜像"><span>删除所有镜像</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">docker</span> rmi <span class="token variable"><span class="token variable">$(</span><span class="token function">docker</span> images <span class="token parameter variable">-q</span><span class="token variable">)</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="更新容器" tabindex="-1"><a class="header-anchor" href="#更新容器"><span>更新容器</span></a></h2><p>修改容器的配置参数</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">docker</span> update <span class="token parameter variable">--restart</span><span class="token operator">=</span>always nginx</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>--restart=always</code> 总是重启，即在docker重启后会自动启动该容器</li></ul><h2 id="进入容器" tabindex="-1"><a class="header-anchor" href="#进入容器"><span>进入容器</span></a></h2><p>部分容器有bash命令，我们还可以通过执行bash进入到容器中查看文件信息</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> <span class="token operator">&lt;</span>container_name<span class="token operator">&gt;</span> /bin/bash</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>container_name</code> 容器名称</li><li><code>/bin/bash</code> 执行命令，也有<code>/bin/sh</code>和<code>bin/ash</code></li></ul><p>启动某个服务/代理</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">sh</span> <span class="token operator">&lt;</span>agent/services.sh<span class="token operator">&gt;</span> start</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>agent/services.sh</code> 服务/代理文件名</li></ul><h2 id="容器日志" tabindex="-1"><a class="header-anchor" href="#容器日志"><span>容器日志</span></a></h2><p>很多容器在首次启动时会显示一些信息，如果运行容器时是采用后台运行(-d)，那么启动后可以通过日志查看输出信息</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">docker</span> logs <span class="token operator">&lt;</span>container_name<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="相关链接" tabindex="-1"><a class="header-anchor" href="#相关链接"><span>相关链接</span></a></h2><ul><li><a href="https://www.runoob.com/docker/docker-command-manual.html" title="Docker命令大全" target="_blank" rel="noopener noreferrer">Docker命令大全</a></li><li><a href="https://blog.csdn.net/qq_32447301/article/details/79387649" title="Docker删除容器与镜像" target="_blank" rel="noopener noreferrer">Docker删除容器与镜像</a></li></ul>`,61),t=[i];function r(c,p){return e(),s("div",null,t)}const o=a(l,[["render",r],["__file","docker-command-manual.html.vue"]]),h=JSON.parse('{"path":"/docker/tutorial/docker-command-manual.html","title":"Docker命令大全","lang":"zh-CN","frontmatter":{"title":"Docker命令大全","date":"2020-05-14T12:26:49.000Z","categories":["Docker"],"tags":["Docker"]},"headers":[{"level":2,"title":"安装/运行","slug":"安装-运行","link":"#安装-运行","children":[{"level":3,"title":"查找镜像","slug":"查找镜像","link":"#查找镜像","children":[]},{"level":3,"title":"拉取镜像到本地","slug":"拉取镜像到本地","link":"#拉取镜像到本地","children":[]},{"level":3,"title":"运行容器","slug":"运行容器","link":"#运行容器","children":[]}]},{"level":2,"title":"显示容器/镜像","slug":"显示容器-镜像","link":"#显示容器-镜像","children":[{"level":3,"title":"显示容器","slug":"显示容器","link":"#显示容器","children":[]},{"level":3,"title":"显示镜像","slug":"显示镜像","link":"#显示镜像","children":[]}]},{"level":2,"title":"启动/停止容器","slug":"启动-停止容器","link":"#启动-停止容器","children":[{"level":3,"title":"批量启动所有容器","slug":"批量启动所有容器","link":"#批量启动所有容器","children":[]},{"level":3,"title":"批量停止所有容器","slug":"批量停止所有容器","link":"#批量停止所有容器","children":[]}]},{"level":2,"title":"删除容器/镜像","slug":"删除容器-镜像","link":"#删除容器-镜像","children":[{"level":3,"title":"删除容器","slug":"删除容器","link":"#删除容器","children":[]},{"level":3,"title":"删除所有的容器","slug":"删除所有的容器","link":"#删除所有的容器","children":[]},{"level":3,"title":"删除镜像","slug":"删除镜像","link":"#删除镜像","children":[]},{"level":3,"title":"删除所有untagged镜像","slug":"删除所有untagged镜像","link":"#删除所有untagged镜像","children":[]},{"level":3,"title":"删除所有镜像","slug":"删除所有镜像","link":"#删除所有镜像","children":[]}]},{"level":2,"title":"更新容器","slug":"更新容器","link":"#更新容器","children":[]},{"level":2,"title":"进入容器","slug":"进入容器","link":"#进入容器","children":[]},{"level":2,"title":"容器日志","slug":"容器日志","link":"#容器日志","children":[]},{"level":2,"title":"相关链接","slug":"相关链接","link":"#相关链接","children":[]}],"git":{},"filePathRelative":"docker/tutorial/docker-command-manual.md"}');export{o as comp,h as data};

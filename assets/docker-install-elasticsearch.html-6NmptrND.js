import{_ as a,c as e,o as s,e as n}from"./app-0TPXc-ei.js";const l={},i=n(`<h2 id="安装elasticsearch" tabindex="-1"><a class="header-anchor" href="#安装elasticsearch"><span>安装ElasticSearch</span></a></h2><ul><li>拉取镜像</li></ul><p><a href="https://hub.docker.com/_/elasticsearch" target="_blank" rel="noopener noreferrer">docker仓库</a>里面没有<code>latest</code>标签，目前最新版本是<code>8.5.1</code></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">docker</span> pull elasticsearch:8.5.1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>构建容器</li></ul><p>首先新建网络（对于连接到同一网络上的其他服务(例如<code>Kibana</code>)很有用）</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">docker</span> network create elastic</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>开始构建<code>elasticsearch</code>容器</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">docker</span> run <span class="token parameter variable">-it</span> <span class="token parameter variable">--name</span> elasticsearch <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">--net</span> elastic <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">--restart</span> always <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-p</span> <span class="token number">9200</span>:9200 <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-p</span> <span class="token number">9300</span>:9300 <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token comment"># -v /srv/elasticsearch/config:/usr/share/elasticsearch/config \\</span></span>
<span class="line">  <span class="token parameter variable">-e</span> <span class="token string">&quot;discovery.type=single-node&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">  elasticsearch:8.5.1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">提醒</p><p>从<code>Elasticsearch 8.0</code>开始默认启用了安全性，也就是启用了TLS加密，在访问时需要带<code>https</code></p><p>访问记得带https</p><p>访问记得带https</p><p>访问记得带https</p></div><p>在docker中启动单节点<code>Elasticsearch</code>集群，会自动进行以下安全配置：</p><ul><li>为传输层和<code>HTTP</code>层生成证书和密钥。</li><li>传输层安全 (TLS) 配置设置被写入<code>elasticsearch.yml</code>.</li><li>为<code>elastic</code>用户生成密码。</li><li>为<code>Kibana</code>生成一个注册令牌。</li></ul><p>容器运行起来后，密码和注册令牌仅在第一次启动<code>Elasticsearch</code>的控制台显示，所以这里不建议后台运行容器(<code>-d</code>)</p><p>当然通过查看输出日志也能得到相关信息</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">docker</span> logs <span class="token parameter variable">-f</span> elasticsearch</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>访问<a href="https://localhost:9200" target="_blank" rel="noopener noreferrer">https://localhost:9200</a>, 输入<code>elastic / 密码</code>验证，密码就是刚才屏幕上显示的，我们也可以进入容器通过<code>bin/elasticsearch-reset-password -u elastic</code>命令来重置密码。</p><ul><li>配置跨域</li></ul><p>首先进入容器</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> elasticsearch /bin/bash</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>修改配置信息</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment"># 修改elasticsearch.yml文件</span></span>
<span class="line"><span class="token function">vim</span> config/elasticsearch.yml</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 在最后面加入跨域配置</span></span>
<span class="line">http.cors.enabled: <span class="token boolean">true</span> <span class="token comment">#开启跨域访问支持，默认为false</span></span>
<span class="line">http.cors.allow-origin: <span class="token string">&quot;*&quot;</span> <span class="token comment">#跨域访问允许的域名地址，(允许所有域名)以上使用正则</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>重启容器</li></ul><p>由于修改了配置信息，需要重启才能生效</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">docker</span> restart elasticsearch</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="安装kibana" tabindex="-1"><a class="header-anchor" href="#安装kibana"><span>安装Kibana</span></a></h2><p>kibana 是一款适用于 es 的 数据可视化和管理工具, 可以提供实时的直方图、线形图、饼状图和地图</p><p>支持用户安全权限体系, 支持各种纬度的插件, 通常搭配 es、logstash 一起使用</p><ul><li><p>拉取镜像</p><p><code>kibana</code>的版本最好与<code>elasticsearch</code>保持一致, 避免发生不必要的错误</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">docker</span> pull kibana:8.5.1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>安装容器</p><p>为了方便管理，与<code>elasticsearch</code>使用同一网络</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">docker</span> run <span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token parameter variable">--name</span> kibana <span class="token parameter variable">--net</span> elastic <span class="token parameter variable">-p</span> <span class="token number">5601</span>:5601 kibana:8.5.1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>现在浏览器访问<code>5601</code>端口，启动成功</p></li></ul><h3 id="配置kibana" tabindex="-1"><a class="header-anchor" href="#配置kibana"><span>配置Kibana</span></a></h3><p>进入系统后可以手动配置，也可以直接输入<code>token</code>进行配置</p><p>在这里我们直接采用<code>token</code>配置方式，这里的token就是在第一次运行<code>elasticsearch</code>容器时出现的用于配置<code>kibana</code>的token</p><p>下一步<code>kibana</code>要求输入验证码，验证码可以通过两种方式获得</p><p>和<code>elasticsearch</code>一样，验证码此时会在控制台输出，我们可以通过查看日志获得</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">docker</span> logs <span class="token parameter variable">-f</span> kibana</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>或者进入<code>kibana</code>容器执行<code>bin/kibana-verification-code</code>命令获得</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment"># 进入容器</span></span>
<span class="line"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> kibana /bin/bash</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 获取验证码</span></span>
<span class="line">bin/kibana-verification-code</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输入验证码后，接下来会进入一个登录界面，这里就是使用上面提到的<code>elastic/密码</code>账号登录即可，登录成功后我们也可以在系统里面编辑个人信息中修改密码等</p><h2 id="安装elasticsearch-head" tabindex="-1"><a class="header-anchor" href="#安装elasticsearch-head"><span>安装ElasticSearch-Head</span></a></h2><blockquote><p><code>ElasticSearch-Head</code>是一个管理界面，可以查看ElasticSearch的相关信息</p></blockquote><p>这只是为了方便用户查看的一个GUI工具，对开发人员来说并不是必需的</p><h3 id="google-chrome插件" tabindex="-1"><a class="header-anchor" href="#google-chrome插件"><span>Google Chrome插件</span></a></h3><p>如果安装了Google Chrome浏览器，可以直接安装<code>ElasticSearch-Head</code>插件即可使用，非常方便，推荐此方法</p><h3 id="docker" tabindex="-1"><a class="header-anchor" href="#docker"><span>Docker</span></a></h3><p>拉取镜像</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">docker</span> pull mobz/elasticsearch-head:5</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>运行并部署</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">--name</span> es_admin <span class="token parameter variable">-p</span> <span class="token number">9100</span>:9100 mobz/elasticsearch-head:5</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>通过访问<code>9100</code>端口就可以查看管理界面，然后在文本框输入<code>elasticsearch</code>的访问地址（<code>9200</code>端口），点击连接即可看到相关信息</p></blockquote><h2 id="相关链接" tabindex="-1"><a class="header-anchor" href="#相关链接"><span>相关链接</span></a></h2><p><a href="https://www.cnblogs.com/jianxuanbing/p/9410800.html" title="Docker 简单部署 ElasticSearch" target="_blank" rel="noopener noreferrer">Docker 简单部署 ElasticSearch</a></p><p><a href="https://www.cnblogs.com/CoderAyu/p/9601991.html" title="ElasticSearch入门 附.Net Core例子" target="_blank" rel="noopener noreferrer">ElasticSearch入门 附.Net Core例子</a></p>`,51),c=[i];function t(r,p){return s(),e("div",null,c)}const o=a(l,[["render",t],["__file","docker-install-elasticsearch.html.vue"]]),h=JSON.parse('{"path":"/docker/instance/docker-install-elasticsearch.html","title":"docker安装elasticsearch","lang":"zh-CN","frontmatter":{"title":"docker安装elasticsearch","date":"2020-08-09T21:24:20.000Z","categories":["elasticsearch"],"tags":["elasticsearch"]},"headers":[{"level":2,"title":"安装ElasticSearch","slug":"安装elasticsearch","link":"#安装elasticsearch","children":[]},{"level":2,"title":"安装Kibana","slug":"安装kibana","link":"#安装kibana","children":[{"level":3,"title":"配置Kibana","slug":"配置kibana","link":"#配置kibana","children":[]}]},{"level":2,"title":"安装ElasticSearch-Head","slug":"安装elasticsearch-head","link":"#安装elasticsearch-head","children":[{"level":3,"title":"Google Chrome插件","slug":"google-chrome插件","link":"#google-chrome插件","children":[]},{"level":3,"title":"Docker","slug":"docker","link":"#docker","children":[]}]},{"level":2,"title":"相关链接","slug":"相关链接","link":"#相关链接","children":[]}],"git":{},"filePathRelative":"docker/instance/docker-install-elasticsearch.md"}');export{o as comp,h as data};

import{_ as s,c as a,o as n,e}from"./app-0TPXc-ei.js";const p={},t=e(`<h1 id="docker安装consul" tabindex="-1"><a class="header-anchor" href="#docker安装consul"><span>docker安装consul</span></a></h1><div class="custom-container tip"><p class="custom-container-title">提示</p><p>进入consul容器的命令是<code>/bin/sh</code></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> consul /bin/sh</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></div><p>端口说明</p><ul><li><code>8500</code> http 端口，用于 http 接口和 web ui</li><li><code>8300</code> server rpc 端口，同一数据中心 consul server 之间通过该端口通信</li><li><code>8301</code> serf lan 端口，同一数据中心 consul client 通过该端口通信</li><li><code>8302</code> serf wan 端口，不同数据中心 consul server 通过该端口通信</li><li><code>8600</code> dns 端口，用于服务发现</li></ul><h2 id="单机单节点" tabindex="-1"><a class="header-anchor" href="#单机单节点"><span>单机单节点</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token parameter variable">-p</span> <span class="token number">8500</span>:8500 <span class="token parameter variable">--name</span> consul consul agent <span class="token parameter variable">-server</span> <span class="token parameter variable">-bootstrap</span> <span class="token parameter variable">-ui</span> <span class="token parameter variable">-client</span><span class="token operator">=</span><span class="token string">&#39;0.0.0.0&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><p><code>-server</code>：设置为Server节点模式，默认为Client节点模式，这个和<code>-client</code>参数是不同的概念</p><p>consul有Client和Server两种节点模式，它们的区别在<a href="https://www.hashicorp.com/blog/consul-announcement" target="_blank" rel="noopener noreferrer">consul官网</a>中有这么一段话：</p><blockquote><p>The only difference between servers and clients are that servers are the only components that store and replicate data.</p></blockquote><p>就是说Server节点比Client节点多了存储和复制数据的能力</p><p>不管是Server还是Client，统称为Agent</p><p>Client是相对无状态的，只负责转发RPC到Server，资源开销很少</p><p>Server是一个有一组扩展功能的代理，这些功能包括参与Raft选举，维护集群状态，响应RPC查询，与其他数据中心交互WAN Gossip和转发查询给leader或者远程数据中心</p><p>只有Server节点才能被选举为leader</p><p>以下参数需要和<code>-server</code>配合使用，可以不设置</p><ul><li><p><code>-bootstrap</code>：启动模式，此模式下，节点可以选举自己为leader，一个datacenter只能有一个此模式启动的节点</p><p>单节点需要启用，集群启动后，新启动的节点不建议使用这种模式</p></li><li><p><code>-bootstrap-expect</code>：设定一个数据中心需要的server节点数，设置的数字必须和实际的server节点数匹配</p><p>consul会等待直到数据中心下的server节点满足设定才会启动集群服务并选举leader</p><p>不能和<code>-bootstrap</code>混用</p></li></ul></li><li><p><code>-ui</code> 启用 UI 界面</p></li><li><p><code>-client</code> 指定client节点访问的IP，默认是<code>127.0.0.1</code>，<code>0.0.0.0</code>表示不限客户端IP</p></li><li><p><code>-retry-join</code> 指定要加入的节点地址（组建集群），后面可以跟其它节点的ip，（单机）也可以跟节点名称</p><div class="custom-container warning"><p class="custom-container-title">注意</p><p><code>-join</code> 已经被弃用，使用<code>-retry-join</code>替代</p></div></li><li><p><code>-node</code> 指定节点名称</p></li><li><p><code>-data-dir</code>：指定数据存放目录（<strong>该目录必需存在，需提前创建好</strong>）</p></li><li><p><code>-config-dir</code>：指定配置文件目录</p></li><li><p><code>-bind</code>：绑定的内部通讯地址，默认0.0.0.0，即，所有的本地地址，会将第一个可用的ip地址散播到集群中，如果有多个可用的ipv4，则consul启动报错。[::]ipv6，TCP UDP协议，相同的端口。防火墙配置。</p></li></ul><h2 id="集群安装" tabindex="-1"><a class="header-anchor" href="#集群安装"><span>集群安装</span></a></h2><h3 id="单机多节点" tabindex="-1"><a class="header-anchor" href="#单机多节点"><span>单机多节点</span></a></h3><p>由于是一台机器，我们可以直接通过docker-compose安装</p><p><code>docker-compose.yaml</code>如下：</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="line"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">&#39;3&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token key atrule">services</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">cs1</span><span class="token punctuation">:</span> </span>
<span class="line">    <span class="token key atrule">image</span><span class="token punctuation">:</span> consul</span>
<span class="line">    <span class="token key atrule">command</span><span class="token punctuation">:</span> agent <span class="token punctuation">-</span>server <span class="token punctuation">-</span>client=0.0.0.0 <span class="token punctuation">-</span>bootstrap<span class="token punctuation">-</span>expect=3 <span class="token punctuation">-</span>node=cs1 <span class="token punctuation">-</span>data<span class="token punctuation">-</span>dir=/var/opt/consul</span>
<span class="line">    <span class="token key atrule">volumes</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> /srv/consul/cs1/etc<span class="token punctuation">:</span>/etc/consul</span>
<span class="line">      <span class="token punctuation">-</span> /srv/consul/cs1/opt<span class="token punctuation">:</span>/var/opt/consul</span>
<span class="line">  <span class="token key atrule">cs2</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">image</span><span class="token punctuation">:</span> consul</span>
<span class="line">    <span class="token key atrule">command</span><span class="token punctuation">:</span> agent <span class="token punctuation">-</span>server <span class="token punctuation">-</span>client=0.0.0.0 <span class="token punctuation">-</span>retry<span class="token punctuation">-</span>join=cs1 <span class="token punctuation">-</span>node=cs2 <span class="token punctuation">-</span>data<span class="token punctuation">-</span>dir=/var/opt/consul</span>
<span class="line">    <span class="token key atrule">volumes</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> /srv/consul/cs2/etc<span class="token punctuation">:</span>/etc/consul</span>
<span class="line">      <span class="token punctuation">-</span> /srv/consul/cs2/opt<span class="token punctuation">:</span>/var/opt/consul</span>
<span class="line">    <span class="token key atrule">depends_on</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> cs1</span>
<span class="line">  <span class="token key atrule">cs3</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">image</span><span class="token punctuation">:</span> consul</span>
<span class="line">    <span class="token key atrule">command</span><span class="token punctuation">:</span> agent <span class="token punctuation">-</span>server <span class="token punctuation">-</span>client=0.0.0.0 <span class="token punctuation">-</span>retry<span class="token punctuation">-</span>join=cs1 <span class="token punctuation">-</span>node=cs3 <span class="token punctuation">-</span>data<span class="token punctuation">-</span>dir=/var/opt/consul</span>
<span class="line">    <span class="token key atrule">volumes</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> /srv/consul/cs3/etc<span class="token punctuation">:</span>/etc/consul</span>
<span class="line">      <span class="token punctuation">-</span> /srv/consul/cs3/opt<span class="token punctuation">:</span>/var/opt/consul</span>
<span class="line">    <span class="token key atrule">depends_on</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> cs1</span>
<span class="line">  <span class="token key atrule">cc1</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">image</span><span class="token punctuation">:</span> consul</span>
<span class="line">    <span class="token key atrule">command</span><span class="token punctuation">:</span> agent <span class="token punctuation">-</span>client=0.0.0.0 <span class="token punctuation">-</span>retry<span class="token punctuation">-</span>join=cs1 <span class="token punctuation">-</span>ui <span class="token punctuation">-</span>node=cc1 <span class="token punctuation">-</span>data<span class="token punctuation">-</span>dir=/var/opt/consul  </span>
<span class="line">    <span class="token key atrule">ports</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> 8500<span class="token punctuation">:</span><span class="token number">8500</span></span>
<span class="line">    <span class="token key atrule">volumes</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> /srv/consul/cc1/etc<span class="token punctuation">:</span>/etc/consul</span>
<span class="line">      <span class="token punctuation">-</span> /srv/consul/cc1/opt<span class="token punctuation">:</span>/var/opt/consul</span>
<span class="line">    <span class="token key atrule">depends_on</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> cs2</span>
<span class="line">      <span class="token punctuation">-</span> cs3</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="多机集群" tabindex="-1"><a class="header-anchor" href="#多机集群"><span>多机集群</span></a></h3><p>假设有以下服务器，环境如下：</p><table><thead><tr><th>服务器IP</th><th>节点类型</th><th>节点名称</th></tr></thead><tbody><tr><td>192.168.222.131</td><td>server</td><td>server-01</td></tr><tr><td>192.168.222.132</td><td>server</td><td>server-02</td></tr><tr><td>192.168.222.130</td><td>client</td><td>client-01</td></tr></tbody></table><h4 id="运行节点" tabindex="-1"><a class="header-anchor" href="#运行节点"><span>运行节点</span></a></h4><p>四台服务器分别运行节点</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment"># 192.168.222.131</span></span>
<span class="line"><span class="token function">docker</span> run <span class="token parameter variable">--net</span> <span class="token function">host</span> <span class="token parameter variable">-d</span> <span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token parameter variable">--name</span> consul consul agent <span class="token parameter variable">-server</span> -bootstrap-expect<span class="token operator">=</span><span class="token number">2</span> <span class="token parameter variable">-bind</span><span class="token operator">=</span><span class="token string">&#39;192.168.222.131&#39;</span> <span class="token parameter variable">-client</span><span class="token operator">=</span><span class="token string">&#39;0.0.0.0&#39;</span> <span class="token parameter variable">-node</span><span class="token operator">=</span>server-01</span>
<span class="line"><span class="token comment"># 192.168.222.132</span></span>
<span class="line"><span class="token function">docker</span> run <span class="token parameter variable">--net</span> <span class="token function">host</span> <span class="token parameter variable">-d</span> <span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token parameter variable">--name</span> consul consul agent <span class="token parameter variable">-server</span> -bootstrap-expect<span class="token operator">=</span><span class="token number">2</span> <span class="token parameter variable">-bind</span><span class="token operator">=</span><span class="token string">&#39;192.168.222.132&#39;</span> <span class="token parameter variable">-client</span><span class="token operator">=</span><span class="token string">&#39;0.0.0.0&#39;</span> <span class="token parameter variable">-node</span><span class="token operator">=</span>server-02 -retry-join<span class="token operator">=</span><span class="token number">192.168</span>.222.131</span>
<span class="line"><span class="token comment"># 192.168.222.133</span></span>
<span class="line"><span class="token function">docker</span> run <span class="token parameter variable">--net</span> <span class="token function">host</span> <span class="token parameter variable">-d</span> <span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token parameter variable">--name</span> consul consul agent <span class="token parameter variable">-server</span> -bootstrap-expect<span class="token operator">=</span><span class="token number">2</span> <span class="token parameter variable">-bind</span><span class="token operator">=</span><span class="token string">&#39;192.168.222.133&#39;</span> <span class="token parameter variable">-client</span><span class="token operator">=</span><span class="token string">&#39;0.0.0.0&#39;</span> <span class="token parameter variable">-node</span><span class="token operator">=</span>server-03 -retry-join<span class="token operator">=</span><span class="token number">192.168</span>.222.131</span>
<span class="line"><span class="token comment"># 更多server参照上面命令即可</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 192.168.222.130</span></span>
<span class="line"><span class="token function">docker</span> run <span class="token parameter variable">--net</span> <span class="token function">host</span> <span class="token parameter variable">-d</span> <span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token parameter variable">--name</span> consul consul agent <span class="token parameter variable">-ui</span> <span class="token parameter variable">-bind</span><span class="token operator">=</span><span class="token string">&#39;192.168.222.130&#39;</span> <span class="token parameter variable">-client</span><span class="token operator">=</span><span class="token string">&#39;0.0.0.0&#39;</span> <span class="token parameter variable">-node</span><span class="token operator">=</span>client-01 -retry-join<span class="token operator">=</span><span class="token number">192.168</span>.222.131</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container danger"><p class="custom-container-title">注意</p><p>由于docker默认使用内网ip通信，使得跨服务器无法找到并加入集群，目前采用的方式是通过使用host模式的网络连接类型，将容器与主机共享一个网络空间的方式</p><p>理想状态下的代码如下：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token parameter variable">--name</span> consul <span class="token parameter variable">-p</span> <span class="token number">8300</span>:8300 <span class="token parameter variable">-p</span> <span class="token number">8301</span>:8301 <span class="token parameter variable">-p</span> <span class="token number">8302</span>:8302 <span class="token parameter variable">-p</span> <span class="token number">8600</span>:8600 consul agent <span class="token parameter variable">-server</span> -bootstrap-expect<span class="token operator">=</span><span class="token number">2</span> <span class="token parameter variable">-client</span><span class="token operator">=</span><span class="token string">&#39;0.0.0.0&#39;</span> <span class="token parameter variable">-node</span><span class="token operator">=</span>server-01</span>
<span class="line"><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token parameter variable">--name</span> consul <span class="token parameter variable">-p</span> <span class="token number">8300</span>:8300 <span class="token parameter variable">-p</span> <span class="token number">8301</span>:8301 <span class="token parameter variable">-p</span> <span class="token number">8302</span>:8302 <span class="token parameter variable">-p</span> <span class="token number">8600</span>:8600 consul agent <span class="token parameter variable">-server</span> -bootstrap-expect<span class="token operator">=</span><span class="token number">2</span> <span class="token parameter variable">-client</span><span class="token operator">=</span><span class="token string">&#39;0.0.0.0&#39;</span> <span class="token parameter variable">-node</span><span class="token operator">=</span>server-02 -retry-join<span class="token operator">=</span><span class="token number">192.168</span>.222.131</span>
<span class="line"></span>
<span class="line"><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token parameter variable">--name</span> consul <span class="token parameter variable">-p</span> <span class="token number">8500</span>:8500 <span class="token parameter variable">-p</span> <span class="token number">8300</span>:8300 <span class="token parameter variable">-p</span> <span class="token number">8301</span>:8301 <span class="token parameter variable">-p</span> <span class="token number">8302</span>:8302 <span class="token parameter variable">-p</span> <span class="token number">8600</span>:8600 consul agent <span class="token parameter variable">-ui</span> <span class="token parameter variable">-client</span><span class="token operator">=</span><span class="token string">&#39;0.0.0.0&#39;</span> <span class="token parameter variable">-node</span><span class="token operator">=</span>client-01 -retry-join<span class="token operator">=</span><span class="token number">192.168</span>.222.131</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h4 id="关联集群" tabindex="-1"><a class="header-anchor" href="#关联集群"><span>关联集群</span></a></h4><p>其实<code>-retry-join</code>命令就已经关联了集群，如果没有该命令，我们还可以在server-02和server-03和client-01节点中输入以下命令建立集群关系</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">consul <span class="token function">join</span> <span class="token number">172.17</span>.0.1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="集群状态" tabindex="-1"><a class="header-anchor" href="#集群状态"><span>集群状态</span></a></h4><p>在任意一台服务器中输入以下命令可查看集群中所有节点信息</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">consul members</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出结果大致如下：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">Node          Address          Status  Type    Build   Protocol  DC   Partition  Segment</span>
<span class="line">d1efd5396188  <span class="token number">172.17</span>.0.1:8301  alive   server  <span class="token number">1.15</span>.1  <span class="token number">2</span>         dc1  default    <span class="token operator">&lt;</span>all<span class="token operator">&gt;</span></span>
<span class="line">74126f762ea9  <span class="token number">172.17</span>.0.2:8301  alive   server  <span class="token number">1.15</span>.1  <span class="token number">2</span>         dc1  default    <span class="token operator">&lt;</span>all<span class="token operator">&gt;</span></span>
<span class="line">2d1c480cc182  <span class="token number">172.17</span>.0.3:8301  alive   server  <span class="token number">1.15</span>.1  <span class="token number">2</span>         dc1  default    <span class="token operator">&lt;</span>all<span class="token operator">&gt;</span></span>
<span class="line">65e53ffb7df5  <span class="token number">172.17</span>.0.4:8301  alive   client  <span class="token number">1.15</span>.1  <span class="token number">2</span>         dc1  default    <span class="token operator">&lt;</span>default<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="相关链接" tabindex="-1"><a class="header-anchor" href="#相关链接"><span>相关链接</span></a></h2><ul><li><a href="https://www.jianshu.com/p/4aaaee6e9ce1" title=".NET Core + Consul：服务注册与发现" target="_blank" rel="noopener noreferrer">.NET Core + Consul：服务注册与发现</a></li><li><a href="https://www.cnblogs.com/xhznl/p/13091750.html" target="_blank" rel="noopener noreferrer">.Net Core微服务入门全纪录（二）——Consul-服务注册与发现（上）</a></li><li><a href="https://blog.csdn.net/u012586326/article/details/112344382" target="_blank" rel="noopener noreferrer">Docker跨服务器通信Overlay解决方案(下) Consul集群</a></li></ul>`,29),l=[t];function c(r,o){return n(),a("div",null,l)}const u=s(p,[["render",c],["__file","docker-install-consul.html.vue"]]),d=JSON.parse('{"path":"/docker/instance/docker-install-consul.html","title":"docker安装consul","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"单机单节点","slug":"单机单节点","link":"#单机单节点","children":[]},{"level":2,"title":"集群安装","slug":"集群安装","link":"#集群安装","children":[{"level":3,"title":"单机多节点","slug":"单机多节点","link":"#单机多节点","children":[]},{"level":3,"title":"多机集群","slug":"多机集群","link":"#多机集群","children":[]}]},{"level":2,"title":"相关链接","slug":"相关链接","link":"#相关链接","children":[]}],"git":{},"filePathRelative":"docker/instance/docker-install-consul.md"}');export{u as comp,d as data};

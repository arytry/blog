import{_ as n,c as s,o as a,e}from"./app-0TPXc-ei.js";const l={},i=e(`<h1 id="docker安装nginx" tabindex="-1"><a class="header-anchor" href="#docker安装nginx"><span>docker安装nginx</span></a></h1><p>首先拉取<code>nginx</code>镜像</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">docker</span> pull nginx</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>然后运行一个名称为<code>nginx-test</code>的容器</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">docker</span> run <span class="token parameter variable">--name</span> nginx-test <span class="token parameter variable">-p</span> <span class="token number">8080</span>:80 <span class="token parameter variable">-d</span> nginx</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>--name nginx-test</code> 将容器名称命名为<code>nginx-test</code></li><li><code>-p 8080:80</code> 将容器的<code>80</code>端口映射到宿主机的<code>8080</code>端口</li><li><code>-d</code> 在后台运行容器</li></ul><p>现在访问<code>http://宿主机ip:8080</code>地址，如果可以看到一个nginx的默认页面，说明nginx已经成功运行</p><blockquote><p><em><strong>如何将自己的网页发布到nginx呢？</strong></em></p></blockquote><h2 id="认识nginx" tabindex="-1"><a class="header-anchor" href="#认识nginx"><span>认识Nginx</span></a></h2><p>nginx中最重要的一个配置文件是<code>nginx.conf</code>，目录位置为<code>/etc/nginx/</code>，我们可以进入容器看看该文件</p><p>首先执行如下命令进入容器</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> nginx-test <span class="token function">bash</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>然后进入<code>nginx.conf</code>文件所在的目录位置并查看该文件</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token builtin class-name">cd</span> /etc/nginx <span class="token operator">&amp;</span> <span class="token function">cat</span> nginx.conf</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>可以看到该文件内容大体如下</p><div class="language-nginx line-numbers-mode" data-highlighter="prismjs" data-ext="nginx" data-title="nginx"><pre class="language-nginx"><code><span class="line"><span class="token directive"><span class="token keyword">user</span>  nginx</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token directive"><span class="token keyword">worker_processes</span>  auto</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token directive"><span class="token keyword">error_log</span>  /var/log/nginx/error.log notice</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token directive"><span class="token keyword">pid</span>        /var/run/nginx.pid</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token directive"><span class="token keyword">events</span></span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token directive"><span class="token keyword">worker_connections</span>  <span class="token number">1024</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token directive"><span class="token keyword">http</span></span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token directive"><span class="token keyword">include</span>       /etc/nginx/mime.types</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token directive"><span class="token keyword">default_type</span>  application/octet-stream</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token directive"><span class="token keyword">log_format</span>  main  <span class="token string">&#39;<span class="token variable">$remote_addr</span> - <span class="token variable">$remote_user</span> [<span class="token variable">$time_local]</span> &quot;<span class="token variable">$request</span>&quot; &#39;</span></span>
<span class="line">                      <span class="token string">&#39;<span class="token variable">$status</span> <span class="token variable">$body_bytes_sent</span> &quot;<span class="token variable">$http_referer</span>&quot; &#39;</span></span>
<span class="line">                      <span class="token string">&#39;&quot;<span class="token variable">$http_user_agent</span>&quot; &quot;<span class="token variable">$http_x_forwarded_for</span>&quot;&#39;</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token directive"><span class="token keyword">access_log</span>  /var/log/nginx/access.log  main</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token directive"><span class="token keyword">sendfile</span>        <span class="token boolean">on</span></span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">#tcp_nopush     on;</span></span>
<span class="line"></span>
<span class="line">    <span class="token directive"><span class="token keyword">keepalive_timeout</span>  <span class="token number">65</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">#gzip  on;</span></span>
<span class="line"></span>
<span class="line">    <span class="token directive"><span class="token keyword">include</span> /etc/nginx/conf.d/*.conf</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在<code>http</code>块中可以看到一行代码<code>include /etc/nginx/conf.d/*.conf;</code>，意思是将<code>/etc/nginx/conf.d/</code>目录下面所有的<code>.conf</code>文件包含进来</p><p>进入该目录可以看到其中有一个<code>default.conf</code>的默认配置文件，看一下大概内容</p><div class="language-nginx line-numbers-mode" data-highlighter="prismjs" data-ext="nginx" data-title="nginx"><pre class="language-nginx"><code><span class="line"><span class="token directive"><span class="token keyword">server</span></span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token directive"><span class="token keyword">listen</span>       <span class="token number">80</span></span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token directive"><span class="token keyword">listen</span>  [::]:80</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token directive"><span class="token keyword">server_name</span>  localhost</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">#access_log  /var/log/nginx/host.access.log  main;</span></span>
<span class="line"></span>
<span class="line">    <span class="token directive"><span class="token keyword">location</span> /</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token directive"><span class="token keyword">root</span>   /usr/share/nginx/html</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token directive"><span class="token keyword">index</span>  index.html index.htm</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    .............</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>listen</code> 监听的端口号，默认为web默认端口<code>80</code>。<strong>这其实就是运行容器时的匹配端口</strong></li><li><code>server_name</code> <code>localhost</code>或<code>域名</code><ul><li><code>localhost</code> 通过IP地址访问站点（上面运行容器后我们运行的就是ip地址）</li><li><code>域名</code> 做了域名解析后就可以通过该域名访问站点了</li></ul></li><li><code>location /</code><ul><li><code>root</code> 站点目录，需要访问自己的站点就可以在这里实现</li><li><code>index</code> 默认首页</li></ul></li></ul><div class="custom-container tip"><p class="custom-container-title">提示</p><p>增加站点，在<code>conf.d</code>文件夹中添加<code>.conf</code>文件即可</p></div><h2 id="目录映射" tabindex="-1"><a class="header-anchor" href="#目录映射"><span>目录映射</span></a></h2><p>前面了解了nginx的知识点，知道要发布自己的站点只需要把自己的站点放在指定目录即可，但是在docker中没做目录映射我们是无法将文件存放在容器中的</p><p>我们把之前的容器移除并重新运行一个新的容器</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment"># 停止容器</span></span>
<span class="line"><span class="token function">docker</span> stop nginx-test</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 移除容器</span></span>
<span class="line"><span class="token function">docker</span> <span class="token function">rm</span> nginx-test</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行一个带有目录映射的容器</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">docker</span> run <span class="token parameter variable">--name</span> nginx <span class="token parameter variable">-p</span> <span class="token number">80</span>:80 <span class="token punctuation">\\</span></span>
<span class="line highlighted">    <span class="token parameter variable">-v</span> /srv/nginx/etc/conf.d:/etc/nginx/conf.d <span class="token punctuation">\\</span></span>
<span class="line highlighted">    <span class="token parameter variable">-v</span> /srv/nginx/html:/usr/share/nginx/html <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token parameter variable">-d</span> nginx </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>-v /srv/nginx/etc/conf.d:/etc/nginx/conf.d</code> 将容器中的<code>/etc/nginx/conf.d</code>目录映射到宿主机的<code>/srv/nginx/etc/conf.d</code>目录</li><li><code>-v /srv/nginx/html:/usr/share/nginx/html</code> 将容器中的站点目录映射到宿主机的<code>/srv/nginx/html</code>目录</li></ul><p>这样我们在宿主机对这两个目录的配置和修改即可同步到容器中</p><div class="custom-container tip"><p class="custom-container-title">提示</p><p>修改配置后需要重启conf文件或者nginx容器才能生效</p></div><h2 id="加密证书" tabindex="-1"><a class="header-anchor" href="#加密证书"><span>加密证书</span></a></h2><p>如果需要加密证书访问，还需要映射<code>443</code>端口。如果是用的证书文件，还可以将存放证书的目录映射到宿主机</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">docker</span> run <span class="token parameter variable">--name</span> nginx <span class="token parameter variable">-p</span> <span class="token number">80</span>:80 <span class="token parameter variable">-p</span> <span class="token number">443</span>:443 <span class="token punctuation">\\</span></span>
<span class="line"><span class="token parameter variable">-v</span> /srv/nginx/etc/conf.d:/etc/nginx/conf.d <span class="token punctuation">\\</span></span>
<span class="line highlighted"><span class="token parameter variable">-v</span> /srv/nginx/etc/cert:/etc/nginx/cert <span class="token punctuation">\\</span></span>
<span class="line"><span class="token parameter variable">-v</span> /srv/nginx/html:/usr/share/nginx/html <span class="token punctuation">\\</span></span>
<span class="line"><span class="token parameter variable">-d</span> nginx </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>还需要修改对应的站点配置文件</p><div class="language-nginx line-numbers-mode" data-highlighter="prismjs" data-ext="nginx" data-title="nginx"><pre class="language-nginx"><code><span class="line"><span class="token directive"><span class="token keyword">server</span></span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token directive"><span class="token keyword">listen</span>       <span class="token number">443</span> ssl</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token directive"><span class="token keyword">listen</span>  [::]:443 ssl</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token directive"><span class="token keyword">server_name</span>  localhost</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line highlighted">    <span class="token comment"># ssl证书地址</span></span>
<span class="line highlighted">    <span class="token directive"><span class="token keyword">ssl_certificate</span>     /etc/nginx/cert/cert.pem</span><span class="token punctuation">;</span>  <span class="token comment"># pem文件的路径</span></span>
<span class="line highlighted">    <span class="token directive"><span class="token keyword">ssl_certificate_key</span>  /etc/nginx/cert/cert.key</span><span class="token punctuation">;</span> <span class="token comment"># key文件的路径</span></span>
<span class="line highlighted"></span>
<span class="line highlighted">    <span class="token comment"># ssl验证相关配置</span></span>
<span class="line highlighted">    <span class="token directive"><span class="token keyword">ssl_session_timeout</span>  <span class="token number">5m</span></span><span class="token punctuation">;</span>    <span class="token comment">#缓存有效期</span></span>
<span class="line highlighted">    <span class="token directive"><span class="token keyword">ssl_ciphers</span> ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4</span><span class="token punctuation">;</span>    <span class="token comment">#加密算法</span></span>
<span class="line highlighted">    <span class="token directive"><span class="token keyword">ssl_protocols</span> TLSv1 TLSv1.1 TLSv1.2</span><span class="token punctuation">;</span>    <span class="token comment">#安全链接可选的加密协议</span></span>
<span class="line highlighted">    <span class="token directive"><span class="token keyword">ssl_prefer_server_ciphers</span> <span class="token boolean">on</span></span><span class="token punctuation">;</span>   <span class="token comment">#使用服务器端的首选算法</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">#access_log  /var/log/nginx/host.access.log  main;</span></span>
<span class="line"></span>
<span class="line">    <span class="token directive"><span class="token keyword">location</span> /</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token directive"><span class="token keyword">root</span>   /usr/share/nginx/html</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token directive"><span class="token keyword">index</span>  index.html index.htm</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    ......</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样就可以通过带有<code>https</code>加密方式访问站点了</p><p>如果想把非加密方式访问直接跳转到加密方式可以再加一个<code>server</code>配置</p><div class="language-nginx line-numbers-mode" data-highlighter="prismjs" data-ext="nginx" data-title="nginx"><pre class="language-nginx"><code><span class="line"><span class="token directive"><span class="token keyword">server</span></span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token directive"><span class="token keyword">listen</span> <span class="token number">80</span></span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token directive"><span class="token keyword">server_name</span> www.example.com</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token directive"><span class="token keyword">rewrite</span> ^(.*)$ https://<span class="token variable">$host</span><span class="token variable">$1</span> permanent</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="重定向" tabindex="-1"><a class="header-anchor" href="#重定向"><span>重定向</span></a></h2><p>重定向有两种方式：<code>proxy_pass</code>和<code>rewrite</code></p><h3 id="proxy-pass" tabindex="-1"><a class="header-anchor" href="#proxy-pass"><span>proxy_pass</span></a></h3><p>访问<code>server_name</code>时，自动代理到<code>proxy_pass</code>地址</p><h4 id="用法" tabindex="-1"><a class="header-anchor" href="#用法"><span>用法</span></a></h4><div class="language-nginx line-numbers-mode" data-highlighter="prismjs" data-ext="nginx" data-title="nginx"><pre class="language-nginx"><code><span class="line"><span class="token directive"><span class="token keyword">server</span></span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token directive"><span class="token keyword">listen</span>  <span class="token number">80</span></span><span class="token punctuation">;</span>  </span>
<span class="line">    <span class="token directive"><span class="token keyword">server_name</span> test.example.com</span><span class="token punctuation">;</span> <span class="token comment"># 绑定域名</span></span>
<span class="line">    <span class="token directive"><span class="token keyword">location</span> /</span> <span class="token punctuation">{</span>  </span>
<span class="line">         <span class="token directive"><span class="token keyword">proxy_pass</span> http://127.0.0.1:8000</span><span class="token punctuation">;</span>  <span class="token comment"># 指定端口号 8000</span></span>
<span class="line">    <span class="token punctuation">}</span>  </span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="说明" tabindex="-1"><a class="header-anchor" href="#说明"><span>说明</span></a></h4><ul><li>浏览器地址不会变化</li><li>请求<code>http://test.example.com</code>，会被自动代理到<code>http://127.0.0.1:8000</code>地址</li></ul><h3 id="rewrite" tabindex="-1"><a class="header-anchor" href="#rewrite"><span>rewrite</span></a></h3><h4 id="用法-1" tabindex="-1"><a class="header-anchor" href="#用法-1"><span>用法</span></a></h4><div class="language-nginx line-numbers-mode" data-highlighter="prismjs" data-ext="nginx" data-title="nginx"><pre class="language-nginx"><code><span class="line"><span class="token directive"><span class="token keyword">rewrite</span> ^(.*)$ https://<span class="token variable">$host</span><span class="token variable">$1</span> permanent</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>此用法和以下代码相同</p><div class="language-nginx line-numbers-mode" data-highlighter="prismjs" data-ext="nginx" data-title="nginx"><pre class="language-nginx"><code><span class="line"><span class="token directive"><span class="token keyword">return</span> <span class="token number">301</span> https://<span class="token variable">$server_name</span><span class="token variable">$request_uri</span></span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="说明-1" tabindex="-1"><a class="header-anchor" href="#说明-1"><span>说明</span></a></h4><ul><li>浏览器地址显示重定向后的url</li><li>参数 <table><thead><tr><th>参数</th><th style="text-align:center;">状态码</th><th>说明</th></tr></thead><tbody><tr><td>last</td><td style="text-align:center;">302</td><td>结束当前的请求处理，用替换后的URI重新匹配location</td></tr><tr><td>break</td><td style="text-align:center;">302</td><td>结束当前的请求处理，使用当前资源，不再执行location里余下的语句</td></tr><tr><td>redirect</td><td style="text-align:center;">302</td><td>临时跳转</td></tr><tr><td>permanent</td><td style="text-align:center;">301</td><td>永久跳转</td></tr></tbody></table></li></ul><h4 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例</span></a></h4><p>跳转到https协议请求</p><div class="language-nginx line-numbers-mode" data-highlighter="prismjs" data-ext="nginx" data-title="nginx"><pre class="language-nginx"><code><span class="line"><span class="token directive"><span class="token keyword">server</span></span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token directive"><span class="token keyword">listen</span> <span class="token number">80</span></span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token directive"><span class="token keyword">server_name</span> www.example.com</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token directive"><span class="token keyword">rewrite</span> ^(.*)$ https://<span class="token variable">$host</span><span class="token variable">$1</span> permanent</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="强制跳转到https" tabindex="-1"><a class="header-anchor" href="#强制跳转到https"><span>强制跳转到https</span></a></h2><p>不管访问<code>http://example.com</code>、<code>https://example.com</code>还是<code>http://www.example.com</code>都跳转到<code>https://www.example.com</code></p><div class="language-nginx line-numbers-mode" data-highlighter="prismjs" data-ext="nginx" data-title="nginx"><pre class="language-nginx"><code><span class="line"><span class="token directive"><span class="token keyword">server</span></span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token directive"><span class="token keyword">listen</span> <span class="token number">80</span></span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token directive"><span class="token keyword">listen</span> <span class="token number">443</span></span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token directive"><span class="token keyword">server_name</span> example.com www.example.com</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token directive"><span class="token keyword">set</span> <span class="token variable">$flag</span> <span class="token number">0</span></span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token directive"><span class="token keyword">if</span> (<span class="token variable">$scheme</span> != <span class="token string">&#39;https&#39;</span>)</span><span class="token punctuation">{</span></span>
<span class="line">     <span class="token directive"><span class="token keyword">set</span> <span class="token variable">$flag</span> <span class="token number">1</span></span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token directive"><span class="token keyword">if</span> (<span class="token variable">$host</span> != <span class="token string">&#39;www.example.com&#39;</span>)</span><span class="token punctuation">{</span></span>
<span class="line">     <span class="token directive"><span class="token keyword">set</span> <span class="token variable">$flag</span> <span class="token number">1</span></span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token directive"><span class="token keyword">if</span> (<span class="token variable">$flag</span> = 1)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token directive"><span class="token keyword">rewrite</span> ^/(.*)$ https://www.example.com/<span class="token variable">$1</span> permanent</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment"># return 301 https://www.example.com$request_uri;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="相关链接" tabindex="-1"><a class="header-anchor" href="#相关链接"><span>相关链接</span></a></h2><p><a href="https://www.cnblogs.com/dotnet261010/p/12596185.html" title="Docker教程：使用Docker容器运行Nginx并实现反向代理" target="_blank" rel="noopener noreferrer">Docker教程：使用Docker容器运行Nginx并实现反向代理</a></p>`,61),p=[i];function t(c,o){return a(),s("div",null,p)}const r=n(l,[["render",t],["__file","docker-install-nginx.html.vue"]]),u=JSON.parse('{"path":"/docker/instance/docker-install-nginx.html","title":"docker安装nginx","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"认识Nginx","slug":"认识nginx","link":"#认识nginx","children":[]},{"level":2,"title":"目录映射","slug":"目录映射","link":"#目录映射","children":[]},{"level":2,"title":"加密证书","slug":"加密证书","link":"#加密证书","children":[]},{"level":2,"title":"重定向","slug":"重定向","link":"#重定向","children":[{"level":3,"title":"proxy_pass","slug":"proxy-pass","link":"#proxy-pass","children":[]},{"level":3,"title":"rewrite","slug":"rewrite","link":"#rewrite","children":[]}]},{"level":2,"title":"强制跳转到https","slug":"强制跳转到https","link":"#强制跳转到https","children":[]},{"level":2,"title":"相关链接","slug":"相关链接","link":"#相关链接","children":[]}],"git":{},"filePathRelative":"docker/instance/docker-install-nginx.md"}');export{r as comp,u as data};

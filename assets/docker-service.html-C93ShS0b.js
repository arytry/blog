import{_ as s,c as n,o as a,e}from"./app-0TPXc-ei.js";const l={},i=e(`<h1 id="docker服务管理" tabindex="-1"><a class="header-anchor" href="#docker服务管理"><span>docker服务管理</span></a></h1><h2 id="daemon-json" tabindex="-1"><a class="header-anchor" href="#daemon-json"><span>daemon.json</span></a></h2><p>docker配置文件，如果刚安装完docker该文件应该是不存在的，需要手动<code>vi(m) daemon.json</code>创建，位于<code>/etc/docker</code>目录下面</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre class="language-json"><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// docker镜像源，官方镜像地址如果不能下载可更换</span></span>
<span class="line">    <span class="token property">&quot;registry-mirrors&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">        <span class="token string">&quot;https://21kbir7t.mirror.aliyuncs.com&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;https://docker.mirrors.ustc.edu.cn/&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;https://reg-mirror.qiniu.com&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;https://hub-mirror.c.163.com&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;http://f1361db2.m.daocloud.io&quot;</span></span>
<span class="line">    <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line">    <span class="token property">&quot;insecure-registries&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&quot;192.168.222.135:5000&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;log-driver&quot;</span><span class="token operator">:</span> <span class="token string">&quot;json-file&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;log-opts&quot;</span><span class="token operator">:</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 日志最大文件为10m</span></span>
<span class="line">        <span class="token property">&quot;max-size&quot;</span><span class="token operator">:</span> <span class="token string">&quot;10m&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token property">&quot;max-file&quot;</span><span class="token operator">:</span> <span class="token string">&quot;5&quot;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改了配置文件后需要重启服务</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">systemctl daemon-reload</span>
<span class="line">systemctl restart <span class="token function">docker</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="远程管理" tabindex="-1"><a class="header-anchor" href="#远程管理"><span>远程管理</span></a></h2><p>docker支持远程管理，比如portainer连接，需要开启2375端口</p><h3 id="修改docker-service" tabindex="-1"><a class="header-anchor" href="#修改docker-service"><span>修改docker.service</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">vim</span> /lib/systemd/system/docker.service</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 找到ExecStart参数并替换为下面代码</span></span>
<span class="line"><span class="token assign-left variable">ExecStart</span><span class="token operator">=</span>/usr/bin/dockerd <span class="token parameter variable">-H</span> unix:///var/run/docker.sock <span class="token parameter variable">-H</span> tcp://0.0.0.0:2375</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><em>实际有三种方法可以修改，具体实现方式可自行Google</em></p></blockquote><h2 id="docker服务" tabindex="-1"><a class="header-anchor" href="#docker服务"><span>docker服务</span></a></h2><h3 id="启动" tabindex="-1"><a class="header-anchor" href="#启动"><span>启动</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">systemctl start <span class="token function">docker</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="重启" tabindex="-1"><a class="header-anchor" href="#重启"><span>重启</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">systemctl restart docker.service <span class="token comment"># 重启docker服务</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">提醒</p><p>重启后所有的docker容器都退出了，需要重新启动</p><p>要解决此问题只需要修改容器参数<code>--restart=always</code>即可</p></div><h3 id="查看运行状态" tabindex="-1"><a class="header-anchor" href="#查看运行状态"><span>查看运行状态</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">systemctl status <span class="token function">docker</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="开机自启动" tabindex="-1"><a class="header-anchor" href="#开机自启动"><span>开机自启动</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">systemctl <span class="token builtin class-name">enable</span> <span class="token function">docker</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="常见问题" tabindex="-1"><a class="header-anchor" href="#常见问题"><span>常见问题</span></a></h2><p>服务器重启后报：<code>Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?</code></p><p>翻译过来就是：<code>无法连接到Docker守护进程在unix:///var/run/ Docker .sock。docker守护进程正在运行吗?</code></p><p>这个主要的问题就是<code>docker</code>没有启动起来导致的</p><p>启动docker并查看运行状态是否成功</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">systemctl start <span class="token function">docker</span></span>
<span class="line">systemctl status <span class="token function">docker</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>看到running的标志，就是运行成功了</p><p>为了避免日后重启再次出现类似情况，增加一个开机自动启动docker即可</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">systemctl <span class="token builtin class-name">enable</span> <span class="token function">docker</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,30),t=[i];function c(r,p){return a(),n("div",null,t)}const d=s(l,[["render",c],["__file","docker-service.html.vue"]]),u=JSON.parse('{"path":"/docker/tutorial/docker-service.html","title":"docker服务管理","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"daemon.json","slug":"daemon-json","link":"#daemon-json","children":[]},{"level":2,"title":"远程管理","slug":"远程管理","link":"#远程管理","children":[{"level":3,"title":"修改docker.service","slug":"修改docker-service","link":"#修改docker-service","children":[]}]},{"level":2,"title":"docker服务","slug":"docker服务","link":"#docker服务","children":[{"level":3,"title":"启动","slug":"启动","link":"#启动","children":[]},{"level":3,"title":"重启","slug":"重启","link":"#重启","children":[]},{"level":3,"title":"查看运行状态","slug":"查看运行状态","link":"#查看运行状态","children":[]},{"level":3,"title":"开机自启动","slug":"开机自启动","link":"#开机自启动","children":[]}]},{"level":2,"title":"常见问题","slug":"常见问题","link":"#常见问题","children":[]}],"git":{},"filePathRelative":"docker/tutorial/docker-service.md"}');export{d as comp,u as data};
